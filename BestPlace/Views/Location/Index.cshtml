@model IEnumerable<BestPlace.Models.bp_Location>

@{
    ViewBag.Title = "Location";
    Layout = "/Views/Shared/_UserLayout.cshtml";
}

<table style="margin-top:5px; margin-bottom:7px; height:40px">
    <tr>
        <td>
            <b style="font-size:18px; color:Black; font-size:14px">
                <span style="color:#F08080; font-size:16px">@ViewBag.UserName</span>
                <span>▪ Những nơi đã từng sống</span>
            </b>
        </td>

        <td style="width:130px">
            <a href="/Location/New" class="IMetroButton">+New</a>
        </td>
    </tr>
</table>

<div class="Element">
    <div class="ImportantElement"></div>
    <div id="map_canvas" style="width:100%; height:300px"></div>
</div>

<table>
@foreach (var item in Model)
{
<tr>
    <td style="width:30px">
        <img src="../../Content/Images/Web-Google-Maps-Metro-icon.png" width="30px"/>
    </td>
    
    <td>
        <b>@item.Address</b>
    </td>
    
    <td style="width:60px">
    @if (Request.IsAuthenticated && item.UserId == (Guid)Membership.GetUser().ProviderUserKey && item != Model.ToList()[0])
    {
        <a href="/Location/Delete?locationId=@item.LocationId" class="SMetro-SmallButton">
            Delete
        </a>
    }
        
    </td>

    <td style="width:120px">
    @if (Request.IsAuthenticated && item.UserId == (Guid)Membership.GetUser().ProviderUserKey && item != Model.ToList()[0])
    {
        <a href="/Location/SetCurrentLocation?locationId=@item.LocationId">
            <a href="/Location/SetCurrentLocation?locationId=@item.LocationId" class="GMetro-SmallButton">Current Location</a>
        </a>
    }
    </td>
</tr>
}
</table>

@*pull data to pos*@
<script>
    var pos = [];
</script>

@foreach (var item in Model)
{
    <script>
        pos.push(['@item.Latitude', '@item.Longitude', '@item.Address']);
    </script>
}

@section RightPanel
{
    @Html.Action("UserMenu", "Home", new { userId = ViewBag.UserId })
}

<script type="text/javascript">

    var addMarker = function (lat, lon, content) {
        var myLocation = new google.maps.LatLng(lat, lon);

        //bonus
        var marker = new google.maps.Marker({
            position: myLocation,
            draggable: false,
            animation: google.maps.Animation.DROP,
            title: "Select your place"
        });
        marker.setMap(map);

        google.maps.event.addListener(marker, 'click', function () {
            var infowindow = new google.maps.InfoWindow({
                content: content
            });
            infowindow.open(map, marker);
        });
    }

    $(document).ready(function () {

        myOptions = {
            zoom: 4,
            mapTypeId: google.maps.MapTypeId.ROADMAP
        };

        map = new google.maps.Map(document.getElementById('map_canvas'), myOptions);

        // Try HTML5 geolocation
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(function (position) {

                var centerLocation = new google.maps.LatLng(pos[0][0], pos[0][1]);
                map.setCenter(centerLocation);
                for (var i = 0; i < pos.length; i++) {
                    addMarker(pos[i][0], pos[i][1], pos[i][2]);
                }

            }, function () {
                handleNoGeolocation(true);
            });
        } else {
            // Browser doesn't support Geolocation
            handleNoGeolocation(false);
        }

        // Create the DIV to hold the control and call the HomeControl() constructor
        // passing in this DIV.
        var homeControlDiv = document.createElement('DIV');
        var homeControl = new HomeControl(homeControlDiv, map);

        homeControlDiv.index = 1;
        map.controls[google.maps.ControlPosition.RIGHT_BOTTOM].push(homeControlDiv);
    });
</script>